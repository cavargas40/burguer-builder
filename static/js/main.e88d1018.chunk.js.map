{"version":3,"sources":["store/actions/actionTypes.js","hoc/Auxiliar/Auxiliar.js","store/actions/burguerBuilder.js","store/actions/order.js","store/actions/auth.js","axios-orders.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","hooks/http-error-handler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["ActionTypes","AddIngredient","RemoveIngredient","SetIngredients","FetchIngredientsFail","PurchaseBurgerStart","PurchaseBurgerSuccess","PurchaseBurgerFail","PurchaseInit","FetchOrdersStart","FetchOrdersSuccess","FetchOrdersFail","AuthStart","AuthSuccess","AuthFail","AuthLogout","SetAuthRedirectPath","Aux","props","children","addIngredient","ingredientName","type","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","res","orders","Object","keys","reduce","prev","order","push","fetchOrdersSuccess","fetchOrdersFail","FIREBASE_KEY","process","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","isSignUp","url","returnSecureToken","expirationDate","Date","getTime","expiresIn","setItem","localId","authFail","setAuthRedirectPath","path","authCheckState","getItem","instance","create","baseURL","Backdrop","show","className","onClick","clicked","React","memo","modalClose","style","transform","opacity","prevProps","nextProps","Button","btnType","join","disabled","Spinner","withErrorHandler","WrappedComponent","httpClient","useState","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","err","useEffect","eject","useHttpErrorHandler","clearError","Modal","message","BurgerIngredient","ingredient","Burger","tranformedIngredients","map","Array","_","i","key","next","length","module","exports","Logo","src","burgerLogofrom","alt","NavigationItem","to","link","exact","activeClassName","NavigationItems","isAuthenticated","DrawerToggle","Toolbar","drawerToggleClicked","isAuth","SideDrawer","attachClasses","open","closed","connect","state","sideDrawerIsVisible","setSideDrawerIsVisible","BuildControl","label","removed","added","controls","BuildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","ordered","purchasable","OrderSummary","ingredientSummary","igKey","textTransform","purchaseCanceled","purchaseContinued","purchasing","setPurchasing","useDispatch","useSelector","burgerBuilder","totalPrice","onInitIngredients","useCallback","actions","purchaseCancelHandler","disabledInfo","orderSummary","burger","sum","el","updatePurchaseState","history","onLogout","Checkout","lazy","Orders","Auth","withRouter","onTryAutoSignup","routes","render","component","BurgerBuilder","Logout","fallback","Boolean","window","location","hostname","match","initialState","building","INGREDIENT_PRICES","salad","cheese","meat","bacon","action","setIngredients","fetchIngredientsFail","reducer","loading","purchased","fetchOrdersStart","newOrder","purchaseBurgerStart","orderReducer","authRedirectPath","authStart","authLogout","composeEnhancers","compose","rootReducer","combineReducers","burgerBuilderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.e88d1018.chunk.js","sourcesContent":["export const ActionTypes = {\r\n  AddIngredient: 'ADD_INGREDIENT',\r\n  RemoveIngredient: 'REMOVE_INGREDIENT',\r\n  SetIngredients: 'SET_INGREDIENTS',\r\n  FetchIngredientsFail: 'FETCH_INGREDIENTS_FAILED',\r\n\r\n  PurchaseBurgerStart: 'PURCHASE_BURGER_START',\r\n  PurchaseBurgerSuccess: 'PURCHASE_BURGER_SUCCESS',\r\n  PurchaseBurgerFail: 'PURCHASE_BURGER_FAIL',\r\n  PurchaseInit: 'PURCHASE_INIT',\r\n\r\n  FetchOrdersStart: 'FETCH_ORDERS_START',\r\n  FetchOrdersSuccess: 'FETCH_ORDERS_SUCCESS',\r\n  FetchOrdersFail: 'FETCH_ORDERS_FAIL',\r\n\r\n  AuthStart: 'AUTH_START',\r\n  AuthSuccess: 'AUTH_SUCCESS',\r\n  AuthFail: 'AUTH_FAIL',\r\n  AuthLogout: 'AUTH_LOGOUT',\r\n\r\n  SetAuthRedirectPath: 'SET_AUTH_REDIRECT_PATH'\r\n};\r\n","const Aux = props => props.children;\r\n\r\nexport default Aux;\r\n","import axios from '../../axios-orders';\r\nimport { ActionTypes } from './actionTypes';\r\n\r\nexport const addIngredient = ingredientName => {\r\n  return {\r\n    type: ActionTypes.AddIngredient,\r\n    ingredientName\r\n  };\r\n};\r\n\r\nexport const removeIngredient = ingredientName => {\r\n  return {\r\n    type: ActionTypes.RemoveIngredient,\r\n    ingredientName\r\n  };\r\n};\r\n\r\nexport const setIngredients = ingredients => {\r\n  return {\r\n    type: ActionTypes.SetIngredients,\r\n    ingredients\r\n  };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n  return {\r\n    type: ActionTypes.FetchIngredientsFail\r\n  };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n  return dispatch => {\r\n    axios\r\n      .get('/ingredients.json')\r\n      .then(response => dispatch(setIngredients(response.data)))\r\n      .catch(error => dispatch(fetchIngredientsFailed()));\r\n  };\r\n};\r\n","import axios from '../../axios-orders';\r\nimport { ActionTypes } from './actionTypes';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n  return {\r\n    type: ActionTypes.PurchaseBurgerSuccess,\r\n    orderId: id,\r\n    orderData\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerFail = error => {\r\n  return {\r\n    type: ActionTypes.PurchaseBurgerFail,\r\n    error\r\n  };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n  return {\r\n    type: ActionTypes.PurchaseBurgerStart\r\n  };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n  return dispatch => {\r\n    dispatch(purchaseBurgerStart());\r\n    axios\r\n      .post('/orders.json?auth=' + token, orderData)\r\n      .then(response => {\r\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n      })\r\n      .catch(error => dispatch(purchaseBurgerFail(error)));\r\n  };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n  return {\r\n    type: ActionTypes.PurchaseInit\r\n  };\r\n};\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n  return {\r\n    type: ActionTypes.FetchOrdersSuccess,\r\n    orders\r\n  };\r\n};\r\n\r\nexport const fetchOrdersFail = error => {\r\n  return {\r\n    type: ActionTypes.FetchOrdersFail,\r\n    error\r\n  };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n  return {\r\n    type: ActionTypes.FetchOrdersStart\r\n  };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n  return dispatch => {\r\n    dispatch(fetchOrdersStart());\r\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n    axios\r\n      .get(`/orders.json${queryParams}`)\r\n      .then(res => {\r\n        const orders = Object.keys(res.data).reduce((prev, order) => {\r\n          prev.push({ ...res.data[order], id: order });\r\n          return prev;\r\n        }, []);\r\n        dispatch(fetchOrdersSuccess(orders));\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchOrdersFail(error));\r\n      });\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport { ActionTypes } from '../actions/actionTypes';\r\n\r\nconst FIREBASE_KEY = process.env.REACT_APP_NOT_FIREBASE_KEY;\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: ActionTypes.AuthStart\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  return {\r\n    type: ActionTypes.AuthSuccess,\r\n    idToken: token,\r\n    userId\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: ActionTypes.AuthFail,\r\n    error\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('expirationDate');\r\n  localStorage.removeItem('userId');\r\n  return {\r\n    type: ActionTypes.AuthLogout\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    let url =\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_KEY}`;\r\n    if (!isSignUp) {\r\n      url =\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_KEY}`;\r\n    }\r\n    axios\r\n      .post(url, {\r\n        email,\r\n        password,\r\n        returnSecureToken: true\r\n      })\r\n      .then(response => {\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + response.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem('token', response.data.idToken);\r\n        localStorage.setItem('expirationDate', expirationDate);\r\n        localStorage.setItem('userId', response.data.localId);\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n        dispatch(checkAuthTimeout(response.data.expiresIn));\r\n      })\r\n      .catch(error => {\r\n        dispatch(authFail(error.response.data.error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setAuthRedirectPath = path => {\r\n  return {\r\n    type: ActionTypes.SetAuthRedirectPath,\r\n    path\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        const userId = localStorage.getItem('userId');\r\n        dispatch(authSuccess(token, userId));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://react-my-burger-8db3f.firebaseio.com'\r\n});\r\n\r\nexport default instance;\r\n","import React from 'react';\r\nimport './Backdrop.css'\r\n\r\nconst Backdrop = props => (props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null);\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport './Modal.css';\r\nimport Aux from '../../../hoc/Auxiliar/Auxiliar';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst Modal = props => {\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return (\r\n  //     nextProps.show !== props.show ||\r\n  //     nextProps.children !== props.children\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.show} clicked={props.modalClose} />\r\n      <div\r\n        className=\"Modal\"\r\n        style={{\r\n          transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n          opacity: props.show ? '1' : '0'\r\n        }}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nconst renderingConditions = (prevProps, nextProps) =>\r\n  nextProps.show === prevProps.show &&\r\n  nextProps.children === prevProps.children;\r\n\r\nexport default React.memo(Modal, renderingConditions);\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = props => (\r\n  <button\r\n    className={['Button', props.btnType].join(' ')}\r\n    onClick={props.clicked}\r\n    disabled={props.disabled}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => <div className=\"Loader\">Loading...</div>;\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliar/Auxiliar';\r\nimport useHttpErrorHandler from '../../hooks/http-error-handler';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  return props => {\r\n    const [error, clearError] = useHttpErrorHandler(axios);\r\n    return (\r\n      <Aux>\r\n        <Modal show={error} modalClose={clearError}>\r\n          {error ? error.message : null}\r\n        </Modal>\r\n        <WrappedComponent {...props} />\r\n      </Aux>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withErrorHandler;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default httpClient => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const reqInterceptor = httpClient.interceptors.request.use(req => {\r\n    setError(null);\r\n    return req;\r\n  });\r\n  const resInterceptor = httpClient.interceptors.response.use(\r\n    res => res,\r\n    err => {\r\n      setError(err);\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      httpClient.interceptors.request.eject(reqInterceptor);\r\n      httpClient.interceptors.request.eject(resInterceptor);\r\n    };\r\n  }, [reqInterceptor, resInterceptor, httpClient]);\r\n\r\n  const errorConfirmedHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return [error, errorConfirmedHandler];\r\n};\r\n","import React from 'react';\r\nimport './BurgerIngredient.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = props => {\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n      case 'bread-bottom':\r\n        ingredient = <div className=\"BreadBottom\"></div>;\r\n        break;\r\n      case 'bread-top':\r\n        ingredient = (\r\n          <div className=\"BreadTop\">\r\n            <div className=\"Seeds1\"></div>\r\n            <div className=\"Seeds2\"></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case 'meat':\r\n        ingredient = <div className=\"Meat\"></div>;\r\n        break;\r\n      case 'cheese':\r\n        ingredient = <div className=\"Cheese\"></div>;\r\n        break;\r\n      case 'bacon':\r\n        ingredient = <div className=\"Bacon\"></div>;\r\n        break;\r\n      case 'salad':\r\n        ingredient = <div className=\"Salad\"></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n        break;\r\n    }\r\n    return ingredient;\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from 'react';\r\nimport './Burger.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst Burger = props => {\r\n  let tranformedIngredients = Object.keys(props.ingredients)\r\n    .map(ingredient => {\r\n      return [...Array(props.ingredients[ingredient])].map((_, i) => {\r\n        return <BurgerIngredient key={ingredient + i} type={ingredient} />;\r\n      });\r\n    })\r\n    .reduce((prev, next) => {\r\n      return [...prev, ...next];\r\n    }, []);\r\n\r\n  if (!tranformedIngredients.length) {\r\n    tranformedIngredients = <div>Please start adding ingredients</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Burguer\">\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {tranformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from 'react';\r\nimport burgerLogofrom from '../../assets/images/burger-logo.png';\r\nimport './Logo.css'\r\n\r\nconst Logo = props => (\r\n  <div className=\"Logo\">\r\n    <img src={burgerLogofrom} alt=\"MyBurger\" />\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavigationItem.css';\r\n\r\nconst NavigationItem = props => (\r\n  <li className=\"NavigationItem\">\r\n    <NavLink to={props.link} exact={props.exact} activeClassName=\"active\">\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nexport default NavigationItem;\r\n","import React from 'react';\r\nimport './NavigationItems.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = props => (\r\n  <ul className=\"NavigationItems\">\r\n    <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n    {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n    {!props.isAuthenticated ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n                           : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n  </ul>\r\n);\r\n\r\nexport default NavigationItems;\r\n","import React from 'react';\r\nimport './DrawerToggle.css';\r\n\r\nconst DrawerToggle = (props) => (\r\n    <div className=\"DrawerToggle\" onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = props => (\r\n  <header className=\"Toolbar\">\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className=\"Logo\">\r\n      <Logo />\r\n    </div>\r\n    <nav className=\"DesktopOnly\">\r\n      <NavigationItems isAuthenticated={props.isAuth} />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliar/Auxiliar';\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n  let attachClasses = ['SideDrawer', 'Close'];\r\n  if (props.open) {\r\n    attachClasses = ['SideDrawer', 'Open'];\r\n  }\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attachClasses.join(' ')} onClick={props.closed}>\r\n        <div className=\"LogoContainer\">\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './Layout.css';\r\nimport Aux from '../Auxiliar/Auxiliar';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nconst Layout = props => {\r\n  const [sideDrawerIsVisible, setSideDrawerIsVisible] = useState(false);\r\n\r\n  const sideDrawerCloseHandler = () => {\r\n    setSideDrawerIsVisible(false);\r\n  };\r\n\r\n  const sideDrawerToggleHandler = () => {\r\n    setSideDrawerIsVisible(!sideDrawerIsVisible);\r\n  };\r\n\r\n  return (\r\n    <Aux>\r\n      <Toolbar\r\n        isAuth={props.isAuthenticated}\r\n        drawerToggleClicked={sideDrawerToggleHandler}\r\n      />\r\n      <SideDrawer\r\n        isAuth={props.isAuthenticated}\r\n        open={sideDrawerIsVisible}\r\n        closed={sideDrawerCloseHandler}\r\n      />\r\n      <main className=\"Content\">{props.children}</main>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst BuildControl = props => (\r\n  <div className=\"BuildControl\">\r\n    <div className=\"Label\">{props.label}</div>\r\n    <button className=\"Less\" onClick={props.removed} disabled={props.disabled}>\r\n      Less\r\n    </button>\r\n    <button className=\"More\" onClick={props.added}>\r\n      More\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default BuildControl;\r\n","import React from 'react';\r\nimport './BuildControls.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n  { label: 'Salad', type: 'salad' },\r\n  { label: 'Cheese', type: 'cheese' },\r\n  { label: 'Bacon', type: 'bacon' },\r\n  { label: 'Meat', type: 'meat' }\r\n];\r\n\r\nconst BuildControls = props => (\r\n  <div className=\"BuildControls\">\r\n    <p>\r\n      Current Price: <strong>{props.price.toFixed(2)}</strong>\r\n    </p>\r\n    {controls.map(control => (\r\n      <BuildControl\r\n        key={control.label}\r\n        label={control.label}\r\n        added={() => props.ingredientAdded(control.type)}\r\n        removed={() => props.ingredientRemoved(control.type)}\r\n        disabled={props.disabled[control.type]}\r\n      />\r\n    ))}\r\n    <button className=\"OrderButton\" onClick={props.ordered} disabled={!props.purchasable}>\r\n      {props.isAuth ? 'ORDER NOW': 'SIGNUP TO ORDER' }\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default BuildControls;\r\n","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliar/Auxiliar';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst OrderSummary = props => {\r\n  //This could be a functional component, doesn't have to be a class\r\n  //componentWillUpdate(){\r\n  // console.log('[OrderSummary] WillUpdate')\r\n  //}\r\n\r\n  const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n    return (\r\n      <li key={igKey}>\r\n        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>:{' '}\r\n        {props.ingredients[igKey]}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Aux>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{ingredientSummary}</ul>\r\n      <p>\r\n        <strong>Total Price: ${props.price.toFixed(2)}</strong>\r\n      </p>\r\n      <p>Continue to checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.purchaseCanceled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.purchaseContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Aux from '../../hoc/Auxiliar/Auxiliar';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions';\r\n\r\nconst BurgerBuilder = props => {\r\n  const [purchasing, setPurchasing] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const ingredients = useSelector(state => state.burgerBuilder.ingredients);\r\n  const totalPrice = useSelector(state => state.burgerBuilder.totalPrice);\r\n  const error = useSelector(state => state.burgerBuilder.error);\r\n  const isAuthenticated = useSelector(state => state.auth.token !== null);\r\n\r\n  const onIngredientAdded = ingredientName =>\r\n    dispatch(actions.addIngredient(ingredientName));\r\n  const onIngredientRemoved = ingredientName =>\r\n    dispatch(actions.removeIngredient(ingredientName));\r\n  const onInitPurchase = () => dispatch(actions.purchaseInit());\r\n  const onSetAuthRedirectPath = path =>\r\n    dispatch(actions.setAuthRedirectPath(path));\r\n\r\n  const onInitIngredients = useCallback(\r\n    () => dispatch(actions.initIngredients()),\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    onInitIngredients();\r\n  }, [onInitIngredients]);\r\n\r\n  const purchaseHandler = () => {\r\n    if (isAuthenticated) {\r\n      setPurchasing(true);\r\n    } else {\r\n      onSetAuthRedirectPath('/checkout');\r\n      props.history.push('/auth');\r\n    }\r\n  };\r\n\r\n  const updatePurchaseState = ingredients => {\r\n    const sum = Object.keys(ingredients)\r\n      .map(igKey => {\r\n        return ingredients[igKey];\r\n      })\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n\r\n    return sum > 0;\r\n  };\r\n\r\n  const purchaseCancelHandler = () => {\r\n    setPurchasing(false);\r\n  };\r\n\r\n  const purchaseContinueHandler = () => {\r\n    onInitPurchase();\r\n    props.history.push('/checkout');\r\n  };\r\n\r\n  const disabledInfo = {\r\n    ...ingredients\r\n  };\r\n  for (let key in disabledInfo) {\r\n    disabledInfo[key] = disabledInfo[key] <= 0;\r\n  }\r\n\r\n  let orderSummary = null;\r\n\r\n  let burger = error ? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n  if (ingredients) {\r\n    burger = (\r\n      <Aux>\r\n        <Burger ingredients={ingredients} />\r\n        <BuildControls\r\n          ingredientAdded={onIngredientAdded}\r\n          ingredientRemoved={onIngredientRemoved}\r\n          disabled={disabledInfo}\r\n          price={totalPrice}\r\n          isAuth={isAuthenticated}\r\n          purchasable={updatePurchaseState(ingredients)}\r\n          ordered={purchaseHandler}\r\n        />\r\n      </Aux>\r\n    );\r\n\r\n    orderSummary = (\r\n      <OrderSummary\r\n        ingredients={ingredients}\r\n        purchaseCanceled={purchaseCancelHandler}\r\n        purchaseContinued={purchaseContinueHandler}\r\n        price={totalPrice}\r\n      />\r\n    );\r\n  }\r\n\r\n  // if (this.state.isLoading) {\r\n  //   orderSummary = <Spinner />;\r\n  // }\r\n\r\n  return (\r\n    <Aux>\r\n      <Modal show={purchasing} modalClose={purchaseCancelHandler}>\r\n        {orderSummary}\r\n      </Modal>\r\n      {burger}\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport * as actions from '../../../store/actions';\r\n\r\nconst Logout = props => {\r\n  const { onLogout } = props;\r\n\r\n  useEffect(() => {\r\n    onLogout();\r\n  }, [onLogout]);\r\n\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import React, { useEffect, Suspense } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions';\n\nconst Checkout = React.lazy(() => {\n  return import('./containers/Checkout/Checkout');\n});\nconst Orders = React.lazy(() => {\n  return import('./containers/Orders/Orders');\n});\nconst Auth = React.lazy(() => {\n  return import('./containers/Auth/Auth');\n});\n\nconst App = props => {\n  const { onTryAutoSignup } = props;\n  useEffect(() => {\n    onTryAutoSignup();\n  }, [onTryAutoSignup]);\n\n  let routes = (\n    <Switch>\n      <Route path=\"/auth\" render={props => <Auth {...props} />} />\n      <Route path=\"/\" exact component={BurgerBuilder} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path=\"/checkout\" render={props => <Checkout {...props} />} />\n        <Route path=\"/orders\" render={props => <Orders {...props} />} />\n        <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/auth\" render={props => <Auth {...props} />} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <div>\n      <Layout>\n        <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>\n      </Layout>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ActionTypes } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  totalPrice: 4,\r\n  error: false,\r\n  building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  cheese: 0.4,\r\n  meat: 1.3,\r\n  bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n  return {\r\n    ...state,\r\n    ingredients: {\r\n      ...state.ingredients,\r\n      [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n    },\r\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n    building: true\r\n  };\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n  return {\r\n    ...state,\r\n    ingredients: {\r\n      ...state.ingredients,\r\n      [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n    },\r\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n    building: true\r\n  };\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n  const { salad, bacon, cheese, meat } = action.ingredients;\r\n  return {\r\n    ...state,\r\n    ingredients: {\r\n      salad,\r\n      bacon,\r\n      cheese,\r\n      meat\r\n    },\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n  };\r\n};\r\n\r\nconst fetchIngredientsFail = state => {\r\n  return {\r\n    ...state,\r\n    error: true\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.AddIngredient:\r\n      return addIngredient(state, action);\r\n    case ActionTypes.RemoveIngredient:\r\n      return removeIngredient(state, action);\r\n    case ActionTypes.SetIngredients:\r\n      return setIngredients(state, action);\r\n    case ActionTypes.FetchIngredientsFail:\r\n      return fetchIngredientsFail(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { ActionTypes } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  purchased: false\r\n};\r\n\r\nconst purchaseInit = state => {\r\n  return {\r\n    ...state,\r\n    purchased: false\r\n  };\r\n};\r\n\r\nconst fetchOrdersFail = state => {\r\n  return {\r\n    ...state,\r\n    loading: false\r\n  };\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    orders: action.orders,\r\n    loading: false\r\n  };\r\n};\r\n\r\nconst fetchOrdersStart = state => {\r\n  return {\r\n    ...state,\r\n    loading: true\r\n  };\r\n};\r\n\r\nconst purchaseBurgerFail = state => {\r\n  return {\r\n    ...state,\r\n    loading: false\r\n  };\r\n};\r\n\r\nconst purchaseBurgerSuccess = (action, state) => {\r\n  const newOrder = {\r\n    ...action.orderData,\r\n    id: action.orderId\r\n  };\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    purchased: true,\r\n    orders: [...state.orders, newOrder]\r\n  };\r\n};\r\n\r\nconst purchaseBurgerStart = state => {\r\n  return {\r\n    ...state,\r\n    loading: true\r\n  };\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.PurchaseInit:\r\n      return purchaseInit(state);\r\n    case ActionTypes.PurchaseBurgerStart:\r\n      return purchaseBurgerStart(state);\r\n    case ActionTypes.PurchaseBurgerSuccess:\r\n      return purchaseBurgerSuccess(action, state);\r\n    case ActionTypes.PurchaseBurgerFail:\r\n      return purchaseBurgerFail(state);\r\n    case ActionTypes.FetchOrdersStart:\r\n      return fetchOrdersStart(state);\r\n    case ActionTypes.FetchOrdersSuccess:\r\n      return fetchOrdersSuccess(state, action);\r\n    case ActionTypes.FetchOrdersFail:\r\n      return fetchOrdersFail(state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderReducer;\r\n","import { ActionTypes } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false,\r\n  authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = state => {\r\n  return {\r\n    ...state,\r\n    error: null,\r\n    loading: true\r\n  };\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n  return {\r\n    ...state,\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false\r\n  };\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return {\r\n    ...state,\r\n    error: action.error,\r\n    loading: false\r\n  };\r\n};\r\n\r\nconst authLogout = state => {\r\n  return {\r\n    ...state,\r\n    token: null,\r\n    userId: null\r\n  };\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n  return {\r\n    ...state,\r\n    authRedirectPath: action.path\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.AuthStart:\r\n      return authStart(state);\r\n    case ActionTypes.AuthSuccess:\r\n      return authSuccess(state, action);\r\n    case ActionTypes.AuthFail:\r\n      return authFail(state, action);\r\n    case ActionTypes.AuthLogout:\r\n      return authLogout(state);\r\n    case ActionTypes.SetAuthRedirectPath:\r\n      return setAuthRedirectPath(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}