{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["Order","props","ingredientOutput","Object","entries","ingredients","map","name","amount","index","style","textTransform","display","margin","border","padding","key","className","price","toFixed","connect","state","orders","order","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios"],"mappings":"sLAoCeA,G,MAhCD,SAAAC,GACZ,IAIMC,EAJcC,OAAOC,QAAQH,EAAMI,aAAaC,KAAI,YAAmB,IAAD,mBAC1E,MAAO,CAAEC,KADiE,KACtDC,OADsD,SAIvCF,KAAI,WAAmBG,GAAW,IAA3BF,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAChD,OACE,0BACEE,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKP,GAEJF,EAVH,KAUWC,EAVX,QAeJ,OACE,yBAAKS,UAAU,SAAf,gBACgBf,EACd,qCACS,wCAAcD,EAAMiB,MAAMC,QAAQ,GAAlC,S,wBCcAC,uBAhBS,SAAAC,GACtB,MAAO,CACLC,OAAQD,EAAME,MAAMD,OACpBE,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKC,WAII,SAAAC,GACzB,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OACbC,EAASE,IAAoBL,EAAOE,QAI3BP,CAGbW,aAtCa,SAAA9B,GAAU,IACf4B,EAAiC5B,EAAjC4B,cAAeJ,EAAkBxB,EAAlBwB,MAAOE,EAAW1B,EAAX0B,OAC9BK,qBAAU,WACRH,EAAcJ,EAAOE,KACpB,CAACE,EAAeJ,EAAOE,IAE1B,IAAIL,EAAS,kBAACW,EAAA,EAAD,MAUb,OATKhC,EAAMuB,UACTF,EAASrB,EAAMqB,OAAOhB,KAAI,SAAAiB,GAAK,OAC7B,kBAAC,EAAD,CACEP,IAAKO,EAAMW,GACX7B,YAAakB,EAAMlB,YACnBa,OAAQK,EAAML,YAIb,6BAAMI,KAsBYa,O","file":"static/js/5.f3e376b2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Order.css';\r\n\r\nconst Order = props => {\r\n  const ingredients = Object.entries(props.ingredients).map(([key, value]) => {\r\n    return { name: key, amount: value };\r\n  });\r\n\r\n  const ingredientOutput = ingredients.map(({ name, amount }, index) => {\r\n    return (\r\n      <span\r\n        style={{\r\n          textTransform: 'capitalize',\r\n          display: 'inline-block',\r\n          margin: '0 8px',\r\n          border: '1px solid gray',\r\n          padding: '5px'\r\n        }}\r\n        key={index}\r\n      >\r\n        {name} ({amount})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"Order\">\r\n      Ingredients: {ingredientOutput}\r\n      <p>\r\n        Price: <strong> USD {props.price.toFixed(2)} </strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios-orders';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst Orders = props => {\r\n  const { onFetchOrders, token, userId } = props;\r\n  useEffect(() => {\r\n    onFetchOrders(token, userId);\r\n  }, [onFetchOrders, token, userId]);\r\n\r\n  let orders = <Spinner />;\r\n  if (!props.loading) {\r\n    orders = props.orders.map(order => (\r\n      <Order\r\n        key={order.id}\r\n        ingredients={order.ingredients}\r\n        price={+order.price}\r\n      />\r\n    ));\r\n  }\r\n  return <div>{orders}</div>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}